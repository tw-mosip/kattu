name: NPM Sonar Analysis

on:
  workflow_call:
    inputs:
      SERVICE_LOCATION:
        required: true
        type: string
      SONAR_URL:
        required: false
        type: string
        default: 'https://sonarcloud.io'
      PROJECT_KEY:
        required: false
        type: string
        default: "mosip_${{ github.event.repository.name }}"
      PROJECT_NAME:
        required: false
        type: string
        default: "${{ github.event.repository.name }}"
      BUILD_SCRIPT: 
        description: "Build script name"
        required: false
        type: string
      SONAR_ARGS:
        required: false
        type: string
        default: ""
    secrets:
      SONAR_TOKEN:
        required: true
      SONAR_ORGANIZATION:
        required: true
      SLACK_WEBHOOK_URL:
        required: true
env:
  SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
  
jobs:
  npm-sonar-analysis:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3.7.0
      with:
        node-version: '16'
    - name: Cache npm dependencies
      uses: actions/cache@v2
      with:
        path: '~/.npm'
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: Cache SonarCloud packages
      uses: actions/cache@v3.3.1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-sonar-

    - name: npm install
      run: cd ${{ inputs.SERVICE_LOCATION }} && npm install

    - name: npm build
      run: cd ${{ inputs.SERVICE_LOCATION }} && ${{ inputs.BUILD_SCRIPT }}

    - name: Setup branch and env
      run: |
        # Strip git ref prefix from version
        echo "BRANCH_NAME=$(echo ${{ github.ref }} | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_ENV
        echo "-Dsonar.branch.name=${{ github.head_ref }} -Dsonar.branch.target=${{ github.base_ref }}"
        echo "GPG_TTY=$(tty)" >> $GITHUB_ENV

    - name: run sonar analysis
      run: |
        if [[ -z $SONAR_TOKEN ]]; then
          echo "\$SONAR_TOKEN environmental variable not set; EXITING;";
          exit 1;
        fi
        if [[ -z $SONAR_ORGANIZATION ]]; then
          echo "\$SONAR_ORGANIZATION environmental variable not set; EXITING;";
          exit 1;
        fi
        if [[ -z $SONAR_URL ]]; then
          echo "\$SONAR_URL environmental variable not set; EXITING;";
          exit 1;
        fi
        cd "./${{inputs.SERVICE_LOCATION}}"
        echo "
        sonar.host.url=${{ inputs.SONAR_URL }}
        sonar.login=${{ secrets.SONAR_TOKEN }}
        sonar.projectKey=${{ inputs.PROJECT_KEY }}
        sonar.projectName=${{ inputs.PROJECT_NAME }}
        sonar.organization=${{ secrets.SONAR_ORGANIZATION }}
        sonar.sourceEncoding=UTF-8
        sonar.typescript.lcov.reportPaths=coverage/lcov.info" >> sonar-project.properties
        
        npx sonar-scanner --info --warning-mode all ${{ inputs.SONAR_ARGS }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
        SONAR_URL: ${{ inputs.SONAR_URL }}

    # - uses: 8398a7/action-slack@v3
    #   with:
    #     status: ${{ job.status }}
    #     fields: repo,message,author,commit,workflow,job # selectable (default: repo,message)
    #   env:
    #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
    #   if: failure() # Pick up events even if the job fails or is canceled.