name:  Manual workflow to transfer docker images

on:
  workflow_call:
    inputs:
      DESTINATION_ORGANIZATION:
        description: 'Provide Docker Hub destination org'
        required: true
        default: ''
        type: string
    secrets:
      USERNAME:
        description: 'Provide Docker Hub username'
        required: true
      TOKEN:
        description: 'Provide Docker Hub token'
        required: true
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  Image-transfer:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: update config.yml
        run: |
          cd release/vidivi
          echo "PWD: $( pwd )"
          echo "LS : $( ls )"
          sed -i "s/username:.*/username: ${{ secrets.USERNAME }}/g" config.yml
          sed -i "s/token:.*/token: ${{ secrets.TOKEN }}/g" config.yml
          sed -i "s/destination_organization.*/destination_organization: ${{ github.event.inputs.DESTINATION_ORGANIZATION }}/g" config.yml
      - name: push images
        run: |
          cd release/vidivi
          sudo apt-get update
          sudo apt-get install -y python3-pip python3-venv
          python3 -m venv venv  # Create a virtual environment
          source venv/bin/activate  # Activate the virtual environment
          pip install docker requests urllib3 PyYAML
          pip show docker  # Verify installation
          python vidivi.py push
          
      - name: commit and push vidivi log
        run: |
          cd release/vidivi/logs/
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "added vidivi log files"
          git push  

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,commit,workflow,job # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: "${{ github.event_name != 'pull_request' && failure() }}" # Pick up events even if the job fails or is canceled.
